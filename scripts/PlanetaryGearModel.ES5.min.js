/*

  Planetary Gears - Minified ES5 Planetary Gear Model Library (Minified and transpiled using Babel)

  Source repository (at time of writing):
  https://github.com/tommccracken/PlanetaryGears


  Copyright 2017 Thomas O. McCracken

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*/


"use strict";var _createClass=function(){function a(b,c){for(var e,d=0;d<c.length;d++)e=c[d],e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(b,e.key,e)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"==typeof b||"function"==typeof b)?b:a}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var PI=Math.PI;function is_num_integer(a){return!(a!==parseInt(a,10))}var AbstractGear=function a(b,c,d){_classCallCheck(this,a),this.tooth_pitch=b,this.gear_size=c,this.gear_speed=d,this.PCD=c*b/PI,this.position=0,this.mesh_correcction=0},InnerGear=function(a){function b(c,d,e){_classCallCheck(this,b);var f=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c,d,e));return f.hub_diameter=0.3*(f.PCD/2),f}return _inherits(b,a),b}(AbstractGear),OuterGear=function(a){function b(c,d,e){_classCallCheck(this,b);var f=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c,d,e));return f.outer_diameter=f.PCD+3*c,f}return _inherits(b,a),b}(AbstractGear),PlanetaryGear=function(){function a(b,c,d,e,f,g,h,j){_classCallCheck(this,a),this.show_debug_messages=!1;var k,l,m,o,p,q,r=0;1==b?(k=c,l=d,m=k+2*l):2==b?(k=c,m=d,l=(m-k)/2):3==b?(l=c,m=d,k=m-2*l):this.show_debug_messages&&console.log("Error: The size_input_mode parameter is ivalid, only the integer values 1, 2, or 3 are valid."),1==e?(o=f,p=g,r=((k+l)*p-k*o)/l,q=((m-l)*p+l*r)/m):2==e?(o=f,q=g,p=(k*o+m*q)/(k+m),r=((k+l)*p-k*o)/l):3==e?(p=f,q=g,o=((k+m)*p-m*q)/k,r=((k+l)*p-k*o)/l):this.show_debug_messages&&console.log("Error: The speed_input_mode parameter is ivalid, only the integer values 1, 2, or 3 are valid."),!is_num_integer((k+m)/j)&&this.show_debug_messages&&console.log("Warning: The expression [(sun size + ring size) / number of planets] must evaluate to an integer in order for the ring gear to be able to mesh with the planet gears."),this.sun=new InnerGear(h,k,o),this.ring=new OuterGear(h,m,q),this.carrier_speed=p,this.carrier_position=0,this.planets=[];for(var s=0;s<j;s++){this.planets[s]=new InnerGear(h,l,r);var t=this.carrier_position+2*s*PI/j,u=this.sun.gear_size/(2*PI)*t,v=u-Math.floor(u);this.planets[s].mesh_correcction=PI+t+(0.5+v)*(2*PI/this.planets[s].gear_size),this.planets[s].position=this.planets[s].mesh_correcction}this.carrier_pitch=this.sun.PCD+this.planets[0].PCD,0==this.ring.gear_size%2?0==this.planets[0].gear_size%2&&(this.ring.mesh_correcction=-0.5*(2*PI/this.ring.gear_size)):0==this.planets[0].gear_size%2&&(this.ring.mesh_correcction=-0.5*(2*PI/this.ring.gear_size)),this.show_debug_messages&&console.log("New planetary gear created. Size input mode: "+b+", Sun size: "+k+", Planet size: "+l+", Ring size: "+m+" , Speed input mode: "+e+", Sun speed: "+o+" , Carrier speed: "+p+", Planet speed: "+r+", Ring speed: "+q+".")}return _createClass(a,[{key:"fixed_speed_update",value:function fixed_speed_update(b){var c=0;c=b/1e3/(2*(1/this.ring.gear_speed)*PI)%1,this.ring.position=2*PI*c+this.ring.mesh_correcction,c=b/1e3/(2*(1/this.sun.gear_speed)*PI)%1,this.sun.position=2*PI*c;for(var e,d=0;d<this.planets.length;d++)e=this.planets[d],c=b/1e3/(2*(1/e.gear_speed)*PI)%1,e.position=2*PI*c+e.mesh_correcction;c=b/1e3/(2*(1/this.carrier_speed)*PI)%1,this.carrier_position=2*PI*c}}]),a}();
